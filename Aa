version: ‘3.8’
x-airflow-common:
&airflow-common
image: apache/airflow:3.0.6-python3.9
environment: &airflow-common-env
AIRFLOW__CORE__EXECUTOR: LocalExecutor
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
AIRFLOW__CORE__FERNET_KEY: ‘’
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: ‘true’
AIRFLOW__CORE__LOAD_EXAMPLES: ‘false’
AIRFLOW__API__AUTH_BACKENDS: ‘airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session’
AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: ‘true’
AIRFLOW__WEBSERVER__EXPOSE_CONFIG: ‘true’
# Windows path mapping
AIRFLOW__CORE__DAGS_FOLDER: ‘/opt/airflow/dags’
volumes:
- ./dags:/opt/airflow/dags
- ./logs:/opt/airflow/logs
- ./plugins:/opt/airflow/plugins
user: “${AIRFLOW_UID:-50000}:0”
depends_on: &airflow-common-depends-on
airflow-init:
condition: service_completed_successfully

services:
airflow-webserver:
<<: *airflow-common
command: webserver
ports:
- “8080:8080”
healthcheck:
test: [“CMD”, “curl”, “–fail”, “http://localhost:8080/health”]
interval: 30s
timeout: 10s
retries: 5
start_period: 30s
restart: always
depends_on:
<<: *airflow-common-depends-on

airflow-scheduler:
<<: *airflow-common
command: scheduler
healthcheck:
test: [“CMD”, “curl”, “–fail”, “http://localhost:8974/health”]
interval: 30s
timeout: 10s
retries: 5
start_period: 30s
restart: always
depends_on:
<<: *airflow-common-depends-on

airflow-triggerer:
<<: *airflow-common
command: triggerer
healthcheck:
test: [“CMD-SHELL”, ‘airflow jobs check –job-type TriggererJob –hostname “$${HOSTNAME}”’]
interval: 30s
timeout: 10s
retries: 5
start_period: 30s
restart: always
depends_on:
<<: *airflow-common-depends-on

airflow-init:
<<: *airflow-common
entrypoint: /bin/bash
command:
- -c
- |
if [[ -z “${AIRFLOW_UID}” ]]; then
echo
echo -e “\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m”
echo “If you are on Linux, you SHOULD follow the instructions below to set “
echo “AIRFLOW_UID environment variable, otherwise files will be owned by root.”
echo “For other operating systems you can get rid of the warning with manually created .env file:”
echo “    See: https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#setting-the-right-airflow-user”
echo
fi
one_meg=1048576
mem_available=$$(($$(getconf _PHYS_PAGES) * $$(getconf PAGE_SIZE) / one_meg))
cpus_available=$$(grep -cE ‘cpu[0-9]+’ /proc/stat)
disk_available=$$(df / | tail -1 | awk ‘{print $$4}’)
warning_resources=“false”
if (( mem_available < 4000 )) ; then
echo
echo -e “\033[1;33mWARNING!!!: Not enough memory available for Docker.\e[0m”
echo “At least 4GB of memory required. You have $$(numfmt –to iec $$((mem_available * one_meg)))”
echo
warning_resources=“true”
fi
if (( cpus_available < 2 )); then
echo
echo -e “\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\e[0m”
echo “At least 2 CPUs recommended. You have $${cpus_available}”
echo
warning_resources=“true”
fi
if (( disk_available < one_meg * 10 )); then
echo
echo -e “\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\e[0m”
echo “At least 10 GBs recommended. You have $$(numfmt –to iec $$((disk_available * 1024 )))”
echo
warning_resources=“true”
fi
if [[ $${warning_resources} == “true” ]]; then
echo
echo -e “\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\e[0m”
echo “Please follow the instructions to increase amount of resources available:”
echo “   https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#before-you-begin”
echo
fi
mkdir -p /sources/logs /sources/dags /sources/plugins
chown -R “${AIRFLOW_UID}:0” /sources/{logs,dags,plugins}
exec /entrypoint airflow version
environment:
<<: *airflow-common-env
_AIRFLOW_DB_UPGRADE: ‘true’
_AIRFLOW_WWW_USER_CREATE: ‘true’
_AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-admin}
_AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-admin}
user: “0:0”
volumes:
- ./:/sources

airflow-cli:
<<: *airflow-common
profiles:
- debug
environment:
<<: *airflow-common-env
CONNECTION_CHECK_MAX_COUNT: “0”
command:
- bash
- -c
- airflow
